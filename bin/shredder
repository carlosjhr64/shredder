#!/usr/bin/env ruby
require 'help_parser'
require 'shredder'

OPTIONS = HelpParser[Shredder::VERSION, <<HELP]
Usage:
  shredder shred [:options+] <shreds=FILENAME>+
  shredder sew [:options+] <shreds=FILENAME>+
Options:
  --n=INTEGER \t Number of shreds
Types:
  FILENAME   /^[[:print:]]+$/
  INTEGER    /^[2-9]\\d*$/
# Examples:
#   shredder shred file.1 file.2 < file.txt
#   shredder shred --n=2 file < file.txt
#   shredder sew file.1 file.2 > file.txt
#   shredder shred --n=2 file > file.txt
HELP
HelpParser.int?(:n)

shreds = OPTIONS.shreds
count = shreds.length
if n = OPTIONS.n?
  if count == 1
    count = n
    shreds = shreds.first
  elsif count != n
    $stderr.puts "shred count(#{count}) not equal to n(#{n})."
    exit 64
  end
end
unless count > 1
  $stderr.puts "shred count must be at least 2"
  exit 64
end

shredder = Shredder::StdIO.new(shreds, count)
case OPTIONS[1]
when 'shred'
  shredder.shred
when 'sew'
  begin
    shredder.sew
  rescue Errno::ENOENT
    # Common expected type of error,
    # user tries to sew non-existing shreds.
    $stderr.puts $!.message
    exit 65
  end
end
